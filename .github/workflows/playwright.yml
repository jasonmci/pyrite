---

name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  loc-counter:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.4'
          cache: 'pip'
      - name: Get cloc version
        run: echo "CLOC_VERSION=$(cloc --version)" >> $GITHUB_ENV
      - name: Cache Playwright binaries
        uses: actions/cache@v3
        with:
          path: /var/cache/apt/archives
          key: cloc-package-ubuntu-latest
          restore-keys: cloc-package-${{ env.CLOC_VERSION }}
      - name: Install cloc
        run: sudo apt-get install -y cloc
      - name: Get lines of code counter
        run: |
          chmod +x cloc_stats.sh
          ./cloc_stats.sh
  linter:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.4'
          cache: 'pip'
      - name: Install python dependencies
        run: pip install --upgrade --upgrade-strategy eager -r requirements.txt
      - name: Python linter
        run: python -m flake8
      - name: YAML linter
        run: yamllint .
  test-build:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.4'
          cache: 'pip'
      - name: Let us build
        run: make all

# yamllint disable-line rule:line-length
# yamllint disable-line rule:comments-indentation
  # test-msedge:
  #   timeout-minutes: 30
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10.4'
  #         cache: 'pip'
  #     - name: Install python dependencies
  # yamllint disable-line rule:line-length
  #       run: pip install --upgrade --upgrade-strategy eager -r requirements.txt
  #     - name: Get Playwright version
  #       run: |
  #         echo "PLAYWRIGHT_VERSION=$(playwright --version)" | sed 's/ /-/g' \
  #         >> $GITHUB_ENV
  #     - name: Cache Playwright binaries
  #       uses: actions/cache@v3
  #       id: playwright-cache
  #       with:
  #         path: |
  #           ~/.cache/ms-playwright
  #         key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
  #     - run: playwright install
  #       if: steps.playwright-cache.outputs.cache-hit != 'true'
  #     - name: install msedge
  #       run: playwright install msedge
  #     - name: Run Playwright tests
  #       run: |
  #         pytest --browser-channel msedge --numprocesses auto --stats-d \
  #         --stats-host ec2-35-90-12-71.us-west-2.compute.amazonaws.com \
  # yamllint disable-line rule:line-length
  #         --stats-port 8125 --stats-prefix msedge --template=html1/index.html \
  #         --report=test-report/report_msedge.html
  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: test-report
  #         path: test-report
  #         retention-days: 30
  # test-firefox:
  #   timeout-minutes: 30
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10.4'
  #         cache: 'pip'
  #     - name: Install python dependencies
  # yamllint disable-line rule:line-length
  #       run: pip install --upgrade --upgrade-strategy eager -r requirements.txt
  #     - name: Get Playwright version
  #       run: |
  #         echo "PLAYWRIGHT_VERSION=$(playwright --version)" | sed 's/ /-/g' \
  #         >> $GITHUB_ENV
  #     - name: Cache Playwright binaries
  #       uses: actions/cache@v3
  #       id: playwright-cache
  #       with:
  #         path: |
  #           ~/.cache/ms-playwright
  #         key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
  #     - run: playwright install
  #       if: steps.playwright-cache.outputs.cache-hit != 'true'
  #     - name: Run Playwright tests
  #       run: |
  #         pytest --browser firefox --numprocesses auto --stats-d \
  #         --stats-host ec2-35-90-12-71.us-west-2.compute.amazonaws.com \
  # yamllint disable-line rule:line-length
  #         --stats-port 8125 --stats-prefix firefox --template=html1/index.html \
  #         --report=test-report/report_firefox.html
  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: test-report
  #         path: test-report
  #         retention-days: 30
  # test-chromium:
  #   timeout-minutes: 30
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10.4'
  #         cache: 'pip'
  #     - name: Install python dependencies
  # yamllint disable-line rule:line-length
  #       run: pip install --upgrade --upgrade-strategy eager -r requirements.txt
  #     - name: Get Playwright version
  #       run: |
  #         echo "PLAYWRIGHT_VERSION=$(playwright --version)" | sed 's/ /-/g' \
  #         >> $GITHUB_ENV
  #     - name: Cache Playwright binaries
  #       uses: actions/cache@v3
  #       id: playwright-cache
  #       with:
  #         path: |
  #           ~/.cache/ms-playwright
  #         key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
  #     - run: playwright install
  #       if: steps.playwright-cache.outputs.cache-hit != 'true'
  #     - name: Run Playwright tests
  #       run: |
  #         pytest --browser chromium --numprocesses auto --stats-d \
  #         --stats-host ec2-35-90-12-71.us-west-2.compute.amazonaws.com \
  #         --stats-port 8125 --stats-prefix chromium \
  # yamllint disable-line rule:line-length
  #         --template=html1/index.html --report=test-report/report_chromium.html
  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: test-report
  #         path: test-report
  #         retention-days: 30
  # test-safari:
  #   timeout-minutes: 30
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10.4'
  #         cache: 'pip'
  #     - name: Install python dependencies
  # yamllint disable-line rule:line-length
  #       run: pip install --upgrade --upgrade-strategy eager -r requirements.txt
  #     - name: Get Playwright version
  #       run: |
  #         echo "PLAYWRIGHT_VERSION=$(playwright --version)" | sed 's/ /-/g' \
  #         >> $GITHUB_ENV
  #     - name: Cache Playwright binaries
  #       uses: actions/cache@v3
  #       id: playwright-cache
  #       with:
  #         path: |
  #           ~/.cache/ms-playwright
  #         key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
  #     - run: playwright install
  #       if: steps.playwright-cache.outputs.cache-hit != 'true'
  #     - name: Install webkit dependencies
  #       # caching this will require docker image for webkit
  #       run: playwright install-deps
  #     - name: Run Playwright tests
  #       run: |
  #         pytest --browser webkit --numprocesses auto --stats-d \
  #         --stats-host ec2-35-90-12-71.us-west-2.compute.amazonaws.com \
  # yamllint disable-line rule:line-length
  #         --stats-port 8125 --stats-prefix webkit --template=html1/index.html \
  #         --report=test-report/report_firefox.html
  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: test-report
  #         path: test-report
  #         retention-days: 30
